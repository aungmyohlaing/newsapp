{"version":3,"sources":["constants/index.js","components/Button/index.js","components/App/index.js","components/Table/index.js","components/Search/index.js","components/Javascript/index.js","components/Python/index.js","serviceWorker.js","index.js"],"names":["BASE_PATH","CustomButton","onClick","children","variant","size","className","Button","defaultProps","Component","Loading","Sort","sortKey","onSort","activeSoftKey","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","state","isSortReverse","bind","this","setState","removeItem","sortedList","reverseSortedList","Container","CardColumns","map","item","Card","key","objectID","Body","Title","href","url","target","rel","title","Text","author","type","Footer","style","verticalAlign","lineHeight","fontSize","marginRight","num_comments","points","Search","input","focus","onChange","value","onSubmit","FormGroup","fontWeight","border","width","ref","param","App","results","searchKey","searchTerm","isLoading","searchValue","fetchTopStories","setTopStories","result","hits","page","prevState","oldHits","updatedHits","updateSetTopStories","fetch","then","response","json","catch","e","id","updatedList","filter","event","preventDefault","checkTopStoriesSearchTerm","ButtonWithLoading","rest","Javascript","withLoading","Python","Boolean","window","location","hostname","match","Root","basename","Navbar","collapseOnSelect","bg","expand","sticky","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavLink","activeClassName","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.8f0410f9.chunk.js","sourcesContent":["export const DEFAULT_QUERY = \"react\";\r\nexport const DEFAULT_PAGE = 0;\r\nexport const DEFAULT_HPP = 100;\r\n\r\nexport const BASE_PATH = \"https://hn.algolia.com/api/v1\";\r\nexport const SEARCH_PATH = \"/search\";\r\nexport const PARAM_SEARCH = \"query=\";\r\nexport const PARAM_PAGE = \"page=\";\r\nexport const PARAM_HPP = \"hitsPerPage=\";","import React from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport { PropTypes } from 'prop-types';\r\n\r\n\r\n\r\nexport const CustomButton = ({ onClick, children, variant, size, className }) => (\r\n    <Button className={className} variant={variant} size={size} onClick={onClick}>\r\n      {children}\r\n    </Button>\r\n  );\r\n  \r\n  CustomButton.propTypes = {\r\n    className: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node,\r\n    variant: PropTypes.string,\r\n    size: PropTypes.string,\r\n  };\r\n  \r\n  CustomButton.defaultProps = {\r\n    className: \"\",\r\n  };\r\n  \r\n export const Loading = () => {\r\n    return (\r\n      <div>\r\n        <h2>Loading...</h2>\r\n      </div>\r\n    );\r\n  };\r\n \r\n  \r\n  export const Sort = ({\r\n    sortKey,\r\n    onSort,\r\n    children,\r\n    activeSoftKey,\r\n    className,\r\n    variant,\r\n  }) => {\r\n    if (sortKey === activeSoftKey) {\r\n      variant = \"primary\";\r\n    } else variant = \"default\";\r\n  \r\n    return (\r\n      <CustomButton\r\n        className={className}\r\n        variant={variant}\r\n        size=\"sm\"\r\n        onClick={() => onSort(sortKey)}\r\n      >\r\n        {children}\r\n      </CustomButton>\r\n    );\r\n  };\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  DEFAULT_QUERY,\r\n  DEFAULT_PAGE,\r\n  DEFAULT_HPP,\r\n  BASE_PATH,\r\n  SEARCH_PATH,\r\n  PARAM_SEARCH,\r\n  PARAM_PAGE,\r\n  PARAM_HPP,\r\n} from \"../../constants/index\";\r\nimport Table from '../Table';\r\nimport { CustomButton, Loading } from \"../Button\";\r\nimport Search from '../Search';\r\n\r\n\r\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nconst updateSetTopStories = (hits, page) => (prevState) => {\r\n  const { results, searchKey } = prevState;\r\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: { ...results, [searchKey]: { hits: updatedHits, page } },\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: DEFAULT_QUERY,\r\n      isLoading: false,\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { hits, page } = result;\r\n\r\n    this.setState(updateSetTopStories(hits, page));\r\n    // const oldHits = (page !== 0) ? this.state.result.hits : []\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${BASE_PATH}${SEARCH_PATH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP} `\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => this.setTopStories(result))\r\n      .catch((e) => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"api url\", url);\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  removeItem(id) {\r\n    const { results, searchKey } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n    const updatedList = hits.filter((item) => item.objectID !== id);\r\n    this.setState({\r\n      results: { ...results, [searchKey]: { hits: updatedList, page } },\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n\r\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron text-center\">\r\n          <Search\r\n            onChange={this.searchValue}\r\n            value={searchTerm}\r\n            onSubmit={this.onSubmit}\r\n          >\r\n            NEWS APP\r\n          </Search>\r\n        </div>\r\n\r\n        <Table list={list} removeItem={this.removeItem} />\r\n\r\n        <div className=\"text-center alert\">\r\n          <ButtonWithLoading\r\n            isLoading={isLoading}\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            onClick={() => this.fetchTopStories(searchTerm, page + 1)}\r\n          >\r\n            Load more..\r\n          </ButtonWithLoading>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst ButtonWithLoading = withLoading(CustomButton);\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, CardColumns, Card } from \"react-bootstrap\";\r\nimport { sortBy } from \"lodash\";\r\nimport { Sort, CustomButton } from '../Button'\r\n\r\nconst SORTS = {\r\n  NONE: (list) => list,\r\n  TITLE: (list) => sortBy(list, \"title\"),\r\n  AUTHOR: (list) => sortBy(list, \"author\"),\r\n  COMMENTS: (list) => sortBy(list, \"num_comments\").reverse(),\r\n  POINTS: (list) => sortBy(list, \"points\").reverse(),\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortKey: \"NONE\",\r\n      isSortReverse: false,\r\n    };\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey) {\r\n    const isSortReverse =\r\n      this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse });\r\n  }\r\n\r\n  render() {\r\n    const { list, removeItem } = this.props;\r\n    const { sortKey, isSortReverse } = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\r\n\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <div className=\"text-center\">\r\n            \r\n            <Sort\r\n              sortKey={\"TITLE\"}\r\n              onSort={this.onSort}\r\n              className={\"sort-btn\"}\r\n              activeSoftKey={sortKey}\r\n            >\r\n              Title\r\n            </Sort>\r\n            <Sort\r\n              sortKey={\"AUTHOR\"}\r\n              onSort={this.onSort}\r\n              className={\"sort-btn\"}\r\n              activeSoftKey={sortKey}\r\n            >\r\n              Author\r\n            </Sort>\r\n            <Sort\r\n              sortKey={\"COMMENTS\"}\r\n              onSort={this.onSort}\r\n              className={\"sort-btn\"}\r\n              activeSoftKey={sortKey}\r\n            >\r\n              Comments\r\n            </Sort>\r\n            <Sort\r\n              sortKey={\"POINTS\"}\r\n              onSort={this.onSort}\r\n              className={\"sort-btn\"}\r\n              activeSoftKey={sortKey}\r\n            >\r\n              Points\r\n            </Sort>\r\n            <hr />\r\n          </div>\r\n          <CardColumns>\r\n            {reverseSortedList.map((item) => (\r\n              <Card key={item.objectID}>\r\n                {/* <Card.Img variant=\"top\" src=\"https://holder.js/100px160\" /> */}\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <a\r\n                      href={item.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {item.title}\r\n                    </a>\r\n                  </Card.Title>\r\n                  <Card.Text>by {item.author}</Card.Text>\r\n                  <CustomButton\r\n                    className=\"remove-btn\"\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                    onClick={() => removeItem(item.objectID)}\r\n                  >\r\n                    Remove\r\n                  </CustomButton>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-right\">\r\n                  <div>\r\n                    <small className=\"text-muted\">\r\n                      <span\r\n                        className=\"material-icons\"\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          lineHeight: \"0\",\r\n                          fontSize: \"18px\",\r\n                        }}\r\n                      >\r\n                        comment\r\n                      </span>\r\n                      <span style={{ marginRight: \"10px\" }}>\r\n                        {item.num_comments}\r\n                      </span>\r\n                      <span\r\n                        className=\"material-icons\"\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          lineHeight: \"0\",\r\n                          fontSize: \"18px\",\r\n                        }}\r\n                      >\r\n                        thumb_up_alt\r\n                      </span>\r\n                      <span style={{ lineHeight: \"1\" }}>{item.points}</span>\r\n                    </small>\r\n                  </div>\r\n                </Card.Footer>\r\n              </Card>\r\n            ))}\r\n          </CardColumns>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nTable.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      objectID: PropTypes.string.isRequired,\r\n      author: PropTypes.string,\r\n      url: PropTypes.string,\r\n      num_comments: PropTypes.number,\r\n      points: PropTypes.number,\r\n    })\r\n  ).isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport { CustomButton } from '../Button'\r\n\r\nclass Search extends Component {\r\n    componentDidMount() {\r\n      this.input.focus();\r\n    }\r\n  \r\n    render() {\r\n      const { onChange, value, children, onSubmit } = this.props;\r\n      return (\r\n        <form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <h1 style={{ fontWeight: \"bold\" }}>{children}</h1>\r\n            <hr style={{ border: \"2px solid black\", width: \"100px\" }} />\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"form-control width100 searchForm\"\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                value={value}\r\n                ref={(param) => {\r\n                  this.input = param;\r\n                }}\r\n              ></input>\r\n              <span className=\"input-group-btn\">\r\n                {/* <button className=\"btn btn-primary searchBtn\">Search</button> */}\r\n                <CustomButton\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  type=\"button\"\r\n                  className=\"searchBtn\"\r\n                  onClick={onSubmit}\r\n                >\r\n                  Search\r\n                </CustomButton>\r\n              </span>\r\n            </div>\r\n          </FormGroup>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Search","import React, { Component } from \"react\";\r\nimport {\r\n  DEFAULT_PAGE,\r\n  DEFAULT_HPP,\r\n  BASE_PATH,\r\n  SEARCH_PATH,\r\n  PARAM_SEARCH,\r\n  PARAM_PAGE,\r\n  PARAM_HPP,\r\n} from \"../../constants/index\";\r\nimport Table from '../Table';\r\nimport { CustomButton, Loading } from \"../Button\";\r\n\r\n\r\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nconst updateSetTopStories = (hits, page) => (prevState) => {\r\n  const { results, searchKey } = prevState;\r\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: { ...results, [searchKey]: { hits: updatedHits, page } },\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nclass Javascript extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: 'Javascript',\r\n      isLoading: false,\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { hits, page } = result;\r\n\r\n    this.setState(updateSetTopStories(hits, page));\r\n    // const oldHits = (page !== 0) ? this.state.result.hits : []\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${BASE_PATH}${SEARCH_PATH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP} `\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => this.setTopStories(result))\r\n      .catch((e) => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"api url\", url);\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  removeItem(id) {\r\n    const { results, searchKey } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n    const updatedList = hits.filter((item) => item.objectID !== id);\r\n    this.setState({\r\n      results: { ...results, [searchKey]: { hits: updatedList, page } },\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n\r\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    return (\r\n      <div>        \r\n\r\n        <Table list={list} removeItem={this.removeItem} />\r\n\r\n        <div className=\"text-center alert\">\r\n          <ButtonWithLoading\r\n            isLoading={isLoading}\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            onClick={() => this.fetchTopStories(searchTerm, page + 1)}\r\n          >\r\n            Load more..\r\n          </ButtonWithLoading>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst ButtonWithLoading = withLoading(CustomButton);\r\n\r\nexport default Javascript;\r\n","import React, { Component } from \"react\";\r\nimport {  \r\n  DEFAULT_PAGE,\r\n  DEFAULT_HPP,\r\n  BASE_PATH,\r\n  SEARCH_PATH,\r\n  PARAM_SEARCH,\r\n  PARAM_PAGE,\r\n  PARAM_HPP,\r\n} from \"../../constants/index\";\r\nimport Table from '../Table';\r\nimport { CustomButton, Loading } from \"../Button\";\r\n\r\n\r\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nconst updateSetTopStories = (hits, page) => (prevState) => {\r\n  const { results, searchKey } = prevState;\r\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: { ...results, [searchKey]: { hits: updatedHits, page } },\r\n    isLoading: false,\r\n  };\r\n};\r\n\r\nclass Python extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: 'Python',\r\n      isLoading: false,\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { hits, page } = result;\r\n\r\n    this.setState(updateSetTopStories(hits, page));\r\n    // const oldHits = (page !== 0) ? this.state.result.hits : []\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${BASE_PATH}${SEARCH_PATH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP} `\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => this.setTopStories(result))\r\n      .catch((e) => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"api url\", url);\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  removeItem(id) {\r\n    const { results, searchKey } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n    const updatedList = hits.filter((item) => item.objectID !== id);\r\n    this.setState({\r\n      results: { ...results, [searchKey]: { hits: updatedList, page } },\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n\r\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    return (\r\n      <div>        \r\n        <Table list={list} removeItem={this.removeItem} />\r\n\r\n        <div className=\"text-center alert\">\r\n          <ButtonWithLoading\r\n            isLoading={isLoading}\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            onClick={() => this.fetchTopStories(searchTerm, page + 1)}\r\n          >\r\n            Load more..\r\n          </ButtonWithLoading>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst ButtonWithLoading = withLoading(CustomButton);\r\n\r\nexport default Python;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/index\";\nimport Javascript from \"./components/Javascript\";\nimport Python from \"./components/Python\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst Root = () => (\n  <Router basename=\"/newsapp/\">\n    <div>\n      <Navbar collapseOnSelect bg=\"light\" variant=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand as={Link} to=\"/\">\n          News App\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={NavLink} to=\"/javascript\" activeClassName=\"active\">\n              JavaScript\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/python\" activeClassName=\"active\">\n              Python\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/javascript\" component={Javascript} />\n      <Route exact path=\"/python\" component={Python} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}